---
demo_name: "{{ opt_name | default('multi-lab2') }}"
demo_instance: "{{ opt_instance | default(lookup('env','USER')) }}"
cloud_name: "{{ demo_name }}.{{ demo_instance }}"
cloud_provider: aws
cloud_region: us-east-1
cloud_user: ec2-user
ansible_ssh_private_key_file: "keys/{{ cloud_name }}_key"

cloud_acls:
  control-acl:
    - { src_ip: 0.0.0.0/0, dst_ports: 22, proto: tcp }
    - { src_ip: 0.0.0.0/0, dst_ports: 443, proto: tcp }
    - { src_ip: 0.0.0.0/0, proto: icmp }
  app-acl:
    - { src_ip: 0.0.0.0/0, dst_ports: 22, proto: tcp }
    - { src_ip: 0.0.0.0/0, dst_ports: 80, proto: tcp }
    - { src_ip: 0.0.0.0/0, proto: icmp }
  vnf-acl:
    - { src_ip: 0.0.0.0/0, proto: all }
vpc_list:
  - name: "vpc.{{ cloud_name }}"
    provider: "{{ cloud_provider }}"
    region: "{{ cloud_region }}"
    project: "{{ cloud_name }}"
    cidr: 172.18.0.0/16
    networks:
      - name: "mgmt.{{ cloud_name }}"
        cidr: "172.18.0.0/24"
        az: "{{ cloud_region }}a"
      - name: "outside.{{ cloud_name }}"
        cidr: "172.18.1.0/24"
        az: "{{ cloud_region }}a"
      - name: "inside.{{ cloud_name }}"
        cidr: "172.18.2.0/24"
        az: "{{ cloud_region }}a"
        routes:
          - cidr: '0.0.0.0/0'
            instance: "pan.{{ cloud_name }}"
            if_index: 2
    instances:
      - name: "control.{{ cloud_name }}"
        size: medium
        image: rhel7
        interfaces:
          - name: eth0
            subnet: "mgmt.{{ cloud_name }}"
            acl: control-acl
            public_ip: true
        tags:
          Owner: "{{ cloud_name }}"
          groups: hosts
      - name: "host1.{{ cloud_name }}"
        size: micro
        image: rhel7
        interfaces:
          - name: eth0
            subnet: "inside.{{ cloud_name }}"
            acl: app-acl
            public_ip: false
        tags:
          Owner: "{{ cloud_name }}"
          groups: app_hosts, hosts
      - name: "host2.{{ cloud_name }}"
        size: micro
        image: rhel7
        interfaces:
          - name: eth0
            subnet: "inside.{{ cloud_name }}"
            acl: app-acl
            public_ip: false
        tags:
          Owner: "{{ cloud_name }}"
          groups: app_hosts, hosts
      - name: "f5.{{ cloud_name }}"
        size: medium
        image: f5-25-good
        ansible_user: admin
        interfaces:
          - name: mgmt
            subnet: "mgmt.{{ cloud_name }}"
            acl: vnf-acl
            private_ip: 172.18.0.253
            public_ip: true
          - name: eth0
            subnet: "outside.{{ cloud_name }}"
            acl: vnf-acl
            private_ip: 172.18.1.253
            public_ip: true
          - name: eth1
            subnet: "inside.{{ cloud_name }}"
            acl: vnf-acl
            private_ip: 172.18.2.253
        tags:
          Owner: "{{ cloud_name }}"
          network_os: tmos
          groups: network,tmos
      - name: "pan.{{ cloud_name }}"
        size: xlarge
        image: pan-payg
        interfaces:
          - name: mgmt
            subnet: "mgmt.{{ cloud_name }}"
            acl: vnf-acl
            private_ip: 172.18.0.254
            public_ip: true
          - name: ethernet1/1
            subnet: "outside.{{ cloud_name }}"
            acl: vnf-acl
            zone_name: untrust
            private_ip: 172.18.1.254
            public_ip: true
          - name: ethernet1/2
            subnet: "inside.{{ cloud_name }}"
            acl: vnf-acl
            zone_name: trust
            private_ip: 172.18.2.254
        tags:
          Owner: "{{ cloud_name }}"
          network_os: panos
          groups: network,panos
group_vars:
  network:
    network_username: admin
    # Use Ansible Vault when encryption is required:
    network_password: Cisc0123
  panos:
    panos_nat_rules:
      - rule_name: "NATAllOut"
        source_zone: ["trust"]
        destination_zone: "untrust"
        source_ip: ["any"]
        destination_ip: ["any"]
        snat_type: "dynamic-ip-and-port"
        snat_interface: "ethernet1/1"
    panos_objects:
      - serviceobject: 'service-ssh'
        destination_port: '22'
        protocol: 'tcp'
        description: 'ssh on 22'
    panos_security_rules:
      - rule_name: 'Allow Outgoing'
        description: 'Allow Outgoing traffic'
        source_zone: ['untrust']
        destination_zone: ['trust']
        action: 'allow'
      - rule_name: 'SSH traffic'
        service: 'service-ssh'
        description: 'Allow SSH traffic'
        source_zone: ['untrust']
        destination_zone: ['trust']
        action: 'allow'

cloud_image_map:
  aws:
    us-east-1:
      pan-payg: ami-12c89a69
      f5-25-good: ami-18ab2462
      centos7: ami-02e98f78
      rhel7: ami-26ebbc5c
    ca-central-1:
      f5-25-good: ami-fca61d98
      centos7: ami-b111aad5
  azure:
    rhel7: { offer: CentOS, publisher: OpenLogic, sku: 7.4, version: latest }

cloud_size_map:
  aws:
    micro: t2.micro
    medium: t2.medium
    xlarge: m4.xlarge
  azure:
    micro: Standard_A0
    medium: Standard_A2_v2
