---
- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    model_dir: "{{ playbook_dir }}/models"
    inventory_root: ./inventory
    key_root: ./keys

  tasks:
    - assert:
        that:
          - opt_model is defined
        msg: "You must specify a model"

    - name: Read in the Cloud Model {{ opt_model }}
      include_vars:
        file: "{{ model_dir }}/{{ opt_model }}.yml"

    - set_fact:
        ansible_ssh_private_key_file: "{{ key_root }}/{{ cloud_name }}_key"
        ansible_ssh_public_key_file: "{{ key_root }}/{{ cloud_name }}_key.pub"

    - name: Create the keys directory
      file:
        path: keys
        state: directory
        mode: 0755

    # - name: Generate SSH keys
    #   shell: ssh-keygen -b 2048 -t rsa -f "{{ ansible_ssh_private_key_file }}" -I "{{ cloud_name }}" -q -N ""
    #   args:
    #     creates: "{{ ansible_ssh_private_key_file }}"
    #   delegate_to: localhost
    #   run_once: yes

    # - set_fact:
    #     ansible_ssh_private_key_file: "keys/{{ cloud_name }}_key"
    #     ansible_ssh_public_key_file: "keys/{{ cloud_name }}_key.pub"
    #   delegate_to: localhost
    #   run_once: yes

    - openssl_privatekey:
        path: "{{ ansible_ssh_private_key_file }}"
        type: RSA
        size: 2048
      delegate_to: localhost
      run_once: yes
      register: key_results

    - openssl_publickey:
        path: "{{ ansible_ssh_public_key_file }}"
        privatekey_path: "{{ ansible_ssh_private_key_file }}"
        format: OpenSSH
        force: no
      delegate_to: localhost
      run_once: yes
      when: key_results.changed
      register: public_key_results

    - debug: var=public_key_results

    - include_role:
        name: cloud-config
      vars:
        - cloud_vpc_name: "{{ vpc_item.name }}"
        - cloud_vpc_data: "{{ vpc_item }}"
      with_items: "{{ vpc_list | default([]) }}"
      loop_control:
        loop_var: vpc_item
      delegate_to: localhost
      run_once: yes
