{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "resources": [
{#                          #}
{#    Security Groups       #}
{#                          #}
{% for cloud_security_group_name, cloud_security_group_data in cloud_acls.iteritems() %}
      {
          "apiVersion": "2017-10-01",
          "type": "Microsoft.Network/networkSecurityGroups",
          "name": "{{ cloud_security_group_name }}",
          "location": "{{ cloud_vpc_data.region }}",
          "properties": {
              "securityRules": [
{% set rule_number = 100 %}
{% for cloud_security_group_rule in cloud_security_group_data %}
{% if cloud_security_group_rule.proto.upper() != 'ICMP' %}
                  {
                      "id": "{{ loop.index + 100 }}",
                      "name": "rule_{{ loop.index + 100 }}",
                      "properties": {
                          "priority": "{{ loop.index + 100 }}",
                          "protocol": "{{ cloud_security_group_rule.proto | regex_replace('[uU][dD][pP]', 'Udp') | regex_replace('[tT][cC][pP]', 'Tcp') | regex_replace('[iI][cC][mM][pP]', 'Icmp') | regex_replace('all', '*') }}",
                          "access": "{{ cloud_security_group_rule.action | default('Allow') }}",
                          "destinationPortRange": "{{ cloud_security_group_rule.dst_ports | default('22') }}",
                          "sourcePortRange": "*",
                          "sourceAddressPrefix": "{{ cloud_security_group_rule.src_ip | regex_replace('0.0.0.0/0', 'Internet') | regex_replace('all', 'Internet') }}",
                          "destinationAddressPrefix": "{{ cloud_security_group_rule.dst_ip | default('*') }}",
                          "direction": "{{ cloud_security_group_rule.direction | default('Inbound') }}"
                      }
                  }{% if not loop.last %},{% endif %}
{% set rule_number = rule_number + 1 %}
{% endif %}
{% endfor %}
              ]
          }
      },
{% endfor %}
{#                          #}
{#    Networks              #}
{#                          #}
      {
         "type": "Microsoft.Network/virtualNetworks",
         "apiVersion": "2015-06-15",
         "location": "{{ cloud_vpc_data.region }}",
         "name": "{{ cloud_vpc_name }}",
         "properties": {
           "addressSpace": {
             "addressPrefixes": [
               "{{ cloud_vpc_data.cidr }}"
             ]
           },
           "subnets": [
{#                                  #}
{#    Create Subnets                #}
{#                                  #}
{% for cloud_network_item in vpc_item.networks %}
              {
                "name": "{{ cloud_network_item.name }}",
                "properties": {
                  "addressPrefix": "{{ cloud_network_item.cidr }}",
{#
                  "routeTable": {
                    "id": "{{ cloud_network_item.name }}.route_table"
                  }
#}
                }
              }{% if not loop.last %},{% endif %}
{% endfor %}
            ]
         }
      },
{#                          #}
{#    Route Tables          #}
{#                          #}
{#
{% for cloud_network_item in vpc_item.networks %}
      {
          "type": "Microsoft.Network/routeTables",
          "name": "{{ cloud_network_item.name }}.route_table",
          "apiVersion": "2017-06-01",
          "location": "{{ cloud_vpc_data.region }}"
      },
{% endfor %}
#}
{% for cloud_instance_item in vpc_item.instances %}
{#                          #}
{#    interfaces list       #}
{#                          #}
{% for cloud_interface_item in cloud_instance_item.interfaces %}
{#                          #}
{#    Create Public IPs     #}
{#                          #}
{% if cloud_interface_item.public_ip is defined and cloud_interface_item.public_ip %}
      {
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "{{ cloud_instance_item.name }}.{{ cloud_interface_item.name }}_public_ip",
          "apiVersion": "2017-06-01",
          "location": "{{ cloud_vpc_data.region }}",
          "scale": null,
          "properties": {
              "publicIPAddressVersion": "IPv4",
              "publicIPAllocationMethod": "Dynamic"
          }
      },
{% endif %}
{#                                  #}
{#    Create Network Interfaces     #}
{#                                  #}
      {
         "type": "Microsoft.Network/networkInterfaces",
         "apiVersion": "2015-06-15",
         "name": "{{ cloud_instance_item.name }}.{{ loop.index }}",
         "location": "{{ cloud_vpc_data.region }}",
         "properties": {
             "ipConfigurations": [
                 {
                     "name": "{{ cloud_interface_item.name }}",
                     "properties": {
                         "privateIPAllocationMethod": "Dynamic",
{% if cloud_interface_item.private_ip is defined %}
                         "privateIPAddress": "{{ cloud_interface_item.private_ip }}",
                         "privateIPAllocationMethod": "Static",
{% endif %}
{% if cloud_interface_item.public_ip is defined and cloud_interface_item.public_ip %}
                         "publicIPAddress": {
                               "id": "[resourceId('Microsoft.Network/publicIPAddresses', '{{ cloud_instance_item.name }}.{{ cloud_interface_item.name }}_public_ip')]"
                         },
{% endif %}
                         "subnet": {
                             "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', '{{ cloud_vpc_name }}'), '/subnets/', '{{ cloud_interface_item.subnet }}')]"
                         }
                     }

                 }
             ],
             "enableIPForwarding": true
         }
      },
{#                                  #}
{#    Create Default Gateway        #}
{#                                  #}
{% if cloud_interface_item.gateway is defined and cloud_interface_item.gateway %}
{#
      {
          "type": "Microsoft.Network/routeTables/routes",
          "name": "{{ cloud_interface_item.subnet }}.route_table/routes/default",
          "apiVersion": "2017-06-01",
          "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "{{ cloud_interface_item.private_ip }}"
          }
      },
#}
{% endif %}
{% endfor %}
{#                                  #}
{#    Create Virtual Machines       #}
{#                                  #}
{% set cloud_instance_image = cloud_image_map.azure[cloud_instance_item.image] %}
{% set cloud_instance_size = cloud_size_map.azure[cloud_instance_item.size] %}
      {
          "apiVersion": "2017-12-01",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "{{ cloud_instance_item.name }}",
          "location": "{{ cloud_vpc_data.region }}",
{% if cloud_instance_image.name is defined %}
          "plan": {
              "name": "{{ cloud_instance_image.name }}",
              "publisher": "{{ cloud_instance_image.publisher }}",
              "product": "{{ cloud_instance_image.product }}"
          },
{% endif %}
          "properties": {
              "hardwareProfile": {
                  "vmSize": "{{ cloud_instance_size }}"
              },
              "osProfile": {
                  "computerName": "{{ cloud_instance_item.name.split('.')[0] }}",
                  "adminUsername": "{{ cloud_user }}",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": "true",
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "/home/{{ cloud_user }}/.ssh/authorized_keys",
                          "keyData": "{{ ssh_public_key_material }}"
                        }
                      ]
                    }
                 }
              },
              "storageProfile": {
                  "imageReference": {
                      "publisher": "{{ cloud_instance_image.publisher }}",
                      "offer": "{{ cloud_instance_image.offer }}",
                      "sku": "{{ cloud_instance_image.sku }}",
                      "version": "{{ cloud_instance_image.version }}"
                  },
                  "osDisk": {
                      "name": "{{ cloud_instance_item.name }}_osdisk",
{% set storage_group = cloud_vpc_name.lower() | regex_replace('[^a-z0-9]', '') | truncate(24, False, '') %}
                      "vhd": {
                          "uri": "http://{{ cloud_storage_group }}.blob.core.windows.net/vhds/{{ cloud_instance_item.name }}_osdisk.vhd"
                      },
                      "caching": "ReadWrite",
                      "createOption": "FromImage"
                  }
              },
              "networkProfile": {
                  "networkInterfaces": [
{% for cloud_interface_item in cloud_instance_item.interfaces %}

                      {
                          "properties": {
{% if loop.first %}
                              "primary": true
{% else %}
                              "primary": false
{% endif %}
                          },
                          "id": "[resourceId('Microsoft.Network/networkInterfaces', '{{ cloud_instance_item.name }}.{{ cloud_interface_item.name }}')]"
                      }{% if not loop.last %},{% endif %}
{% endfor %}
                  ]
              }
          }
      },
{% endfor %}
    ]
}
