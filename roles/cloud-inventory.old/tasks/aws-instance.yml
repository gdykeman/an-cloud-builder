---
- name: Get the instance fact for instance {{ cloud_instance_item.name }}
  ec2_instance_facts:
    region: "{{ cloud_vpc_data.region }}"
    filters:
      vpc-id: "{{ vpc_id }}"
      "tag:Name": "{{ cloud_instance_item.name }}"
      "tag:Environment": "{{ cloud_vpc_data.project }}"
  register: instance_facts

- name: Dereference interface facts
  set_fact:
    instance_interface_facts: "{{ instance_facts.instances[0].network_interfaces }}"

- name: Set the IP address for the instance
  set_fact:
    instance_ip_address: "{{ instance_facts.instances[0].public_ip_address | default(instance_facts.instances[0].private_ip_address, true) }}"

- set_fact:
    instance_interfaces: {}

- include: "aws-interface.yml"
  with_indexed_items: "{{ cloud_instance_item.interfaces | default([]) }}"
  loop_control:
    loop_var: cloud_interface_item

- add_host:
    hostname: "{{ cloud_instance_item.name }}"
    ansible_host: "{{ instance_ip_address }}"
    ansible_network_os: "{{ cloud_instance_item.tags.network_os | default(omit) }}"
    groups: "{{ cloud_instance_item.tags.groups | default(omit) }}"
    private_ip_address: "{{ instance_facts.instances[0].private_ip_address}}"
    interfaces: "{{ instance_interfaces }}"

- name: Gather the list of interfaces to save to host_vars_dir
  set_fact:
    instance_vars:
      interfaces: "{{ instance_interfaces }}"

- name: Set the host_vars_dir
  set_fact:
    host_vars_dir: "{{ inventory_dir }}/host_vars/{{ cloud_instance_item.name }}"

- name: Create the host_vars directory
  file:
    path: "{{ host_vars_dir }}"
    state: directory

- name: Write out the interfaces to {{ inventory_dir }}/host_vars/{{ cloud_instance_item.name }}
  copy:
    content: "{{ instance_vars | to_nice_yaml }}"
    dest: "{{ host_vars_dir }}/interfaces.yml"
